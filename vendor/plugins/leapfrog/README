= Leapfrog

Leapfrog is a rails plugin for userstamps.
That provides simplify function for userstamps.

Leapfrog has mainly 2 functions.
One is Migration support. Other is data registration support.

Typically, an enterprise system records the user who submitted the data.
But tables do not have created_by/updated_by columns on scaffold generate.

By you are appending one line into a migration file,  then created_by and
updated_by columns are added.

== Installation

  Download and copy to vender/plugins folder.

  or

  script/plugin install git://github.com/kobayashi-tbn/leapfrog.git

  when rails3...
  rails plugin install git://github.com/kobayashi-tbn/leapfrog.git

== Example

Migration

  Add 't.userstamps' to Migration file into self.up method.


    class CreateUsers < ActiveRecord::Migration
      def self.up
        create_table :users do |t|
          t.string :name
          t.string :password
          t.string :email

          t.timestamps
          t.userstamps     # add column 'created_by' and 'updated_by'
        end
      end

      def self.down
        drop_table :users
      end
    end


  If you want to add column after created tables,
  Then run script/generate migration add_userstamps_to_todo
  and edit the migration file.(ex. Model name is Todo.)


    class AddUserstampsToTodo < ActiveRecord::Migration
      def self.up
        add_userstamps :todos
      end

      def self.down
        remove_userstamps :todos
      end
    end

  'created_by' and 'updated_by' columns type is :integer.
  If you use type :string then, define the following.

    t.userstamps :type => :string

    add_userstamps :todos, :type => :string

== Controller

ActionController includes Leapfrog::Controller::Users
and each Controller object was extended Leapfrog::Controller::LfMacro
for get the user_id/username from Leapfrog::UserInfo


== Model

ActiveRecord::Base includes Leapfrog::Model::Observe.
and each Model object was extended Leapfrog::Model::LfMacro
for set data to 'created_by' and 'updated_by' column of the Model.

You need to define 'leapfrog_user_id' in each Model
If instead of 'user_id', you use 'username' then, define 'leapfrog :username'

=== Example

    class Todo < ActiveRecord::Base
      leapfrog_user_id
    end

  or

    class Todo < ActiveRecord::Base
      leapfrog :user_id
    end

  If you use username, that type is String then...

    class Todo < ActiveRecord::Base
      leapfrog :username
    end


== How to get the User ID

Leapfrog get user_id from the session in the Controller, so
you have to set the user_id into session[:user_id].
If username that type is :string then, session[:username].

== Customizing the key of session map

  Rails3:
    Add following.
    If instead of :username, you use :user_name.

    app/controllers/application_controller.rb
    add 1 line.
    Leapfrog::UserInfo::USERSTAMP_MAP[:name] = :user_name

== NOTE

If it is running on development enviroment edit
   config/enviroments/development.rb

    config.cache_classes = true # false(default) -> true

* This issue was fixed v0.2.3~


Copyright (c) 2011 Toshinobu Kobayashi, released under the MIT license
